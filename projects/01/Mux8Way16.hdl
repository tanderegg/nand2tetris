// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/21/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Mux(a=a[0], b=b[0], sel=sel[0], out=ab0sel0);
    Mux(a=c[0], b=d[0], sel=sel[0], out=cd0sel0);
    Mux(a=e[0], b=f[0], sel=sel[0], out=ef0sel0);
    Mux(a=g[0], b=h[0], sel=sel[0], out=gh0sel0);
    Mux(a=ab0sel0, b=cd0sel0, sel=sel[1], out=abcd0sel1);
    Mux(a=ef0sel0, b=gh0sel0, sel=sel[1], out=efgh0sel1);
    Mux(a=abcd0sel1, b=efgh0sel1, sel=sel[2], out=out[0]);

    Mux(a=a[1], b=b[1], sel=sel[0], out=ab1sel0);
    Mux(a=c[1], b=d[1], sel=sel[0], out=cd1sel0);
    Mux(a=e[1], b=f[1], sel=sel[0], out=ef1sel0);
    Mux(a=g[1], b=h[1], sel=sel[0], out=gh1sel0);
    Mux(a=ab1sel0, b=cd1sel0, sel=sel[1], out=abcd1sel1);
    Mux(a=ef1sel0, b=gh1sel0, sel=sel[1], out=efgh1sel1);
    Mux(a=abcd1sel1, b=efgh1sel1, sel=sel[2], out=out[1]);

    Mux(a=a[2], b=b[2], sel=sel[0], out=ab2sel0);
    Mux(a=c[2], b=d[2], sel=sel[0], out=cd2sel0);
    Mux(a=e[2], b=f[2], sel=sel[0], out=ef2sel0);
    Mux(a=g[2], b=h[2], sel=sel[0], out=gh2sel0);
    Mux(a=ab2sel0, b=cd2sel0, sel=sel[1], out=abcd2sel1);
    Mux(a=ef2sel0, b=gh2sel0, sel=sel[1], out=efgh2sel1);
    Mux(a=abcd2sel1, b=efgh2sel1, sel=sel[2], out=out[2]);

    Mux(a=a[3], b=b[3], sel=sel[0], out=ab3sel0);
    Mux(a=c[3], b=d[3], sel=sel[0], out=cd3sel0);
    Mux(a=e[3], b=f[3], sel=sel[0], out=ef3sel0);
    Mux(a=g[3], b=h[3], sel=sel[0], out=gh3sel0);
    Mux(a=ab3sel0, b=cd3sel0, sel=sel[1], out=abcd3sel1);
    Mux(a=ef3sel0, b=gh3sel0, sel=sel[1], out=efgh3sel1);
    Mux(a=abcd3sel1, b=efgh3sel1, sel=sel[2], out=out[3]);

    Mux(a=a[4], b=b[4], sel=sel[0], out=ab4sel0);
    Mux(a=c[4], b=d[4], sel=sel[0], out=cd4sel0);
    Mux(a=e[4], b=f[4], sel=sel[0], out=ef4sel0);
    Mux(a=g[4], b=h[4], sel=sel[0], out=gh4sel0);
    Mux(a=ab4sel0, b=cd4sel0, sel=sel[1], out=abcd4sel1);
    Mux(a=ef4sel0, b=gh4sel0, sel=sel[1], out=efgh4sel1);
    Mux(a=abcd4sel1, b=efgh4sel1, sel=sel[2], out=out[4]);

    Mux(a=a[5], b=b[5], sel=sel[0], out=ab5sel0);
    Mux(a=c[5], b=d[5], sel=sel[0], out=cd5sel0);
    Mux(a=e[5], b=f[5], sel=sel[0], out=ef5sel0);
    Mux(a=g[5], b=h[5], sel=sel[0], out=gh5sel0);
    Mux(a=ab5sel0, b=cd5sel0, sel=sel[1], out=abcd5sel1);
    Mux(a=ef5sel0, b=gh5sel0, sel=sel[1], out=efgh5sel1);
    Mux(a=abcd5sel1, b=efgh5sel1, sel=sel[2], out=out[5]);

    Mux(a=a[6], b=b[6], sel=sel[0], out=ab6sel0);
    Mux(a=c[6], b=d[6], sel=sel[0], out=cd6sel0);
    Mux(a=e[6], b=f[6], sel=sel[0], out=ef6sel0);
    Mux(a=g[6], b=h[6], sel=sel[0], out=gh6sel0);
    Mux(a=ab6sel0, b=cd6sel0, sel=sel[1], out=abcd6sel1);
    Mux(a=ef6sel0, b=gh6sel0, sel=sel[1], out=efgh6sel1);
    Mux(a=abcd6sel1, b=efgh6sel1, sel=sel[2], out=out[6]);

    Mux(a=a[7], b=b[7], sel=sel[0], out=ab7sel0);
    Mux(a=c[7], b=d[7], sel=sel[0], out=cd7sel0);
    Mux(a=e[7], b=f[7], sel=sel[0], out=ef7sel0);
    Mux(a=g[7], b=h[7], sel=sel[0], out=gh7sel0);
    Mux(a=ab7sel0, b=cd7sel0, sel=sel[1], out=abcd7sel1);
    Mux(a=ef7sel0, b=gh7sel0, sel=sel[1], out=efgh7sel1);
    Mux(a=abcd7sel1, b=efgh7sel1, sel=sel[2], out=out[7]);

    Mux(a=a[8], b=b[8], sel=sel[0], out=ab8sel0);
    Mux(a=c[8], b=d[8], sel=sel[0], out=cd8sel0);
    Mux(a=e[8], b=f[8], sel=sel[0], out=ef8sel0);
    Mux(a=g[8], b=h[8], sel=sel[0], out=gh8sel0);
    Mux(a=ab8sel0, b=cd8sel0, sel=sel[1], out=abcd8sel1);
    Mux(a=ef8sel0, b=gh8sel0, sel=sel[1], out=efgh8sel1);
    Mux(a=abcd8sel1, b=efgh8sel1, sel=sel[2], out=out[8]);

    Mux(a=a[9], b=b[9], sel=sel[0], out=ab9sel0);
    Mux(a=c[9], b=d[9], sel=sel[0], out=cd9sel0);
    Mux(a=e[9], b=f[9], sel=sel[0], out=ef9sel0);
    Mux(a=g[9], b=h[9], sel=sel[0], out=gh9sel0);
    Mux(a=ab9sel0, b=cd9sel0, sel=sel[1], out=abcd9sel1);
    Mux(a=ef9sel0, b=gh9sel0, sel=sel[1], out=efgh9sel1);
    Mux(a=abcd9sel1, b=efgh9sel1, sel=sel[2], out=out[9]);

    Mux(a=a[10], b=b[10], sel=sel[0], out=ab10sel0);
    Mux(a=c[10], b=d[10], sel=sel[0], out=cd10sel0);
    Mux(a=e[10], b=f[10], sel=sel[0], out=ef10sel0);
    Mux(a=g[10], b=h[10], sel=sel[0], out=gh10sel0);
    Mux(a=ab10sel0, b=cd10sel0, sel=sel[1], out=abcd10sel1);
    Mux(a=ef10sel0, b=gh10sel0, sel=sel[1], out=efgh10sel1);
    Mux(a=abcd10sel1, b=efgh10sel1, sel=sel[2], out=out[10]);

    Mux(a=a[11], b=b[11], sel=sel[0], out=ab11sel0);
    Mux(a=c[11], b=d[11], sel=sel[0], out=cd11sel0);
    Mux(a=e[11], b=f[11], sel=sel[0], out=ef11sel0);
    Mux(a=g[11], b=h[11], sel=sel[0], out=gh11sel0);
    Mux(a=ab11sel0, b=cd11sel0, sel=sel[1], out=abcd11sel1);
    Mux(a=ef11sel0, b=gh11sel0, sel=sel[1], out=efgh11sel1);
    Mux(a=abcd11sel1, b=efgh11sel1, sel=sel[2], out=out[11]);

    Mux(a=a[12], b=b[12], sel=sel[0], out=ab12sel0);
    Mux(a=c[12], b=d[12], sel=sel[0], out=cd12sel0);
    Mux(a=e[12], b=f[12], sel=sel[0], out=ef12sel0);
    Mux(a=g[12], b=h[12], sel=sel[0], out=gh12sel0);
    Mux(a=ab12sel0, b=cd12sel0, sel=sel[1], out=abcd12sel1);
    Mux(a=ef12sel0, b=gh12sel0, sel=sel[1], out=efgh12sel1);
    Mux(a=abcd12sel1, b=efgh12sel1, sel=sel[2], out=out[12]);

    Mux(a=a[13], b=b[13], sel=sel[0], out=ab13sel0);
    Mux(a=c[13], b=d[13], sel=sel[0], out=cd13sel0);
    Mux(a=e[13], b=f[13], sel=sel[0], out=ef13sel0);
    Mux(a=g[13], b=h[13], sel=sel[0], out=gh13sel0);
    Mux(a=ab13sel0, b=cd13sel0, sel=sel[1], out=abcd13sel1);
    Mux(a=ef13sel0, b=gh13sel0, sel=sel[1], out=efgh13sel1);
    Mux(a=abcd13sel1, b=efgh13sel1, sel=sel[2], out=out[13]);

    Mux(a=a[14], b=b[14], sel=sel[0], out=ab14sel0);
    Mux(a=c[14], b=d[14], sel=sel[0], out=cd14sel0);
    Mux(a=e[14], b=f[14], sel=sel[0], out=ef14sel0);
    Mux(a=g[14], b=h[14], sel=sel[0], out=gh14sel0);
    Mux(a=ab14sel0, b=cd14sel0, sel=sel[1], out=abcd14sel1);
    Mux(a=ef14sel0, b=gh14sel0, sel=sel[1], out=efgh14sel1);
    Mux(a=abcd14sel1, b=efgh14sel1, sel=sel[2], out=out[14]);

    Mux(a=a[15], b=b[15], sel=sel[0], out=ab15sel0);
    Mux(a=c[15], b=d[15], sel=sel[0], out=cd15sel0);
    Mux(a=e[15], b=f[15], sel=sel[0], out=ef15sel0);
    Mux(a=g[15], b=h[15], sel=sel[0], out=gh15sel0);
    Mux(a=ab15sel0, b=cd15sel0, sel=sel[1], out=abcd15sel1);
    Mux(a=ef15sel0, b=gh15sel0, sel=sel[1], out=efgh15sel1);
    Mux(a=abcd15sel1, b=efgh15sel1, sel=sel[2], out=out[15]);
}
