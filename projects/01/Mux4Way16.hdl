// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    Mux(a=a[0], b=b[0], sel=sel[0], out=absel0);
    Mux(a=c[0], b=d[0], sel=sel[0], out=cdsel0);
    Mux(a=absel0, b=cdsel0, sel=sel[1], out=out[0]);

    Mux(a=a[1], b=b[1], sel=sel[0], out=absel1);
    Mux(a=c[1], b=d[1], sel=sel[0], out=cdsel1);
    Mux(a=absel1, b=cdsel1, sel=sel[1], out=out[1]);

    Mux(a=a[2], b=b[2], sel=sel[0], out=absel2);
    Mux(a=c[2], b=d[2], sel=sel[0], out=cdsel2);
    Mux(a=absel2, b=cdsel2, sel=sel[1], out=out[2]);

    Mux(a=a[3], b=b[3], sel=sel[0], out=absel3);
    Mux(a=c[3], b=d[3], sel=sel[0], out=cdsel3);
    Mux(a=absel3, b=cdsel3, sel=sel[1], out=out[3]);

    Mux(a=a[4], b=b[4], sel=sel[0], out=absel4);
    Mux(a=c[4], b=d[4], sel=sel[0], out=cdsel4);
    Mux(a=absel4, b=cdsel4, sel=sel[1], out=out[4]);

    Mux(a=a[5], b=b[5], sel=sel[0], out=absel5);
    Mux(a=c[5], b=d[5], sel=sel[0], out=cdsel5);
    Mux(a=absel5, b=cdsel5, sel=sel[1], out=out[5]);

    Mux(a=a[6], b=b[6], sel=sel[0], out=absel6);
    Mux(a=c[6], b=d[6], sel=sel[0], out=cdsel6);
    Mux(a=absel6, b=cdsel6, sel=sel[1], out=out[6]);

    Mux(a=a[7], b=b[7], sel=sel[0], out=absel7);
    Mux(a=c[7], b=d[7], sel=sel[0], out=cdsel7);
    Mux(a=absel7, b=cdsel7, sel=sel[1], out=out[7]);

    Mux(a=a[8], b=b[8], sel=sel[0], out=absel8);
    Mux(a=c[8], b=d[8], sel=sel[0], out=cdsel8);
    Mux(a=absel8, b=cdsel8, sel=sel[1], out=out[8]);

    Mux(a=a[9], b=b[9], sel=sel[0], out=absel9);
    Mux(a=c[9], b=d[9], sel=sel[0], out=cdsel9);
    Mux(a=absel9, b=cdsel9, sel=sel[1], out=out[9]);

    Mux(a=a[10], b=b[10], sel=sel[0], out=absel10);
    Mux(a=c[10], b=d[10], sel=sel[0], out=cdsel10);
    Mux(a=absel10, b=cdsel10, sel=sel[1], out=out[10]);

    Mux(a=a[11], b=b[11], sel=sel[0], out=absel11);
    Mux(a=c[11], b=d[11], sel=sel[0], out=cdsel11);
    Mux(a=absel11, b=cdsel11, sel=sel[1], out=out[11]);

    Mux(a=a[12], b=b[12], sel=sel[0], out=absel12);
    Mux(a=c[12], b=d[12], sel=sel[0], out=cdsel12);
    Mux(a=absel12, b=cdsel12, sel=sel[1], out=out[12]);

    Mux(a=a[13], b=b[13], sel=sel[0], out=absel13);
    Mux(a=c[13], b=d[13], sel=sel[0], out=cdsel13);
    Mux(a=absel13, b=cdsel13, sel=sel[1], out=out[13]);

    Mux(a=a[14], b=b[14], sel=sel[0], out=absel14);
    Mux(a=c[14], b=d[14], sel=sel[0], out=cdsel14);
    Mux(a=absel14, b=cdsel14, sel=sel[1], out=out[14]);

    Mux(a=a[15], b=b[15], sel=sel[0], out=absel15);
    Mux(a=c[15], b=d[15], sel=sel[0], out=cdsel15);
    Mux(a=absel15, b=cdsel15, sel=sel[1], out=out[15]);
}
